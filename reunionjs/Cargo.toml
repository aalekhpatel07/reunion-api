[package]
name = "reunionjs"
version = "0.1.6"
authors = ["Aalekh Patel <aalekh.gwpeck.7998@icloud.com>"]
edition = "2018"
description = "A JavaScript (WASM) API for the Rust backend of `reunion`, i.e. a Union-Find w/ Rank data structure for JavaScript that runs WebAssembly."
license-file = "LICENSE"
documentation = "https://www.github.com/aalekhpatel07/reunion-api/blob/master/reunionjs/README.md"
repository = "https://www.github.com/aalekhpatel07/reunion-api"
keywords = ["Union-Find", "Disjoint-Set", "Math", "Algorithms", "Data-Structures"]


[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"]}
reunion = { version = "^0.1.13" }
serde = { version = "1.0", features = ["derive"]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

